{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Auth APIs\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Movie APIs\nexport const getMovies = () => api.get('/movies');\nexport const getMovieById = id => api.get(`/movies/${id}`);\nexport const getShowtimes = movieId => api.get(`/movies/${movieId}/showtimes`);\n\n// Booking APIs\nexport const createBooking = async bookingData => {\n  try {\n    // Endpoint: POST /bookings\n    // Request body: \n    // {\n    //   \"customer_id\": \"string\",\n    //   \"movie_id\": \"string\",\n    //   \"showtime_id\": \"string\",\n    //   \"seats\": [\"string\"],\n    //   \"total_amount\": 0,\n    //   \"status\": \"pending\"\n    // }\n    const response = await api.post('/bookings', bookingData);\n    return response;\n  } catch (error) {\n    console.error('Error creating booking:', error);\n    throw error;\n  }\n};\nexport const getBookings = () => api.get('/bookings');\nexport const getBookingById = id => api.get(`/bookings/${id}`);\n\n// Payment APIs\nexport const createPayment = paymentData => api.post('/payments', paymentData);\nexport const getPayments = () => api.get('/payments');\nexport const getPaymentById = id => api.get(`/payments/${id}`);\n\n// Seat APIs\nexport const getSeats = showtimeId => api.get(`/seats/showtime/${showtimeId}`);\nexport const bookSeats = (showtimeId, seats) => api.post('/book', {\n  showtime_id: showtimeId,\n  seats\n});\n\n// Customer APIs\nexport const getProfile = () => {\n  const customerId = localStorage.getItem('customer_id');\n  if (!customerId) {\n    throw new Error('Customer ID not found');\n  }\n  return api.get(`/customers/${customerId}`);\n};\nexport const updateProfile = data => {\n  const customerId = localStorage.getItem('customer_id');\n  if (!customerId) {\n    throw new Error('Customer ID not found');\n  }\n  return api.put(`/customers/${customerId}`, data);\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","login","credentials","response","post","error","register","userData","getMovies","get","getMovieById","id","getShowtimes","movieId","createBooking","bookingData","console","getBookings","getBookingById","createPayment","paymentData","getPayments","getPaymentById","getSeats","showtimeId","bookSeats","seats","showtime_id","getProfile","customerId","localStorage","getItem","Error","updateProfile","data","put"],"sources":["D:/BTL_HDV/mid-project-379283427/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Auth APIs\nexport const login = async (credentials) => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const register = async (userData) => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Movie APIs\nexport const getMovies = () => api.get('/movies');\nexport const getMovieById = (id) => api.get(`/movies/${id}`);\nexport const getShowtimes = (movieId) => api.get(`/movies/${movieId}/showtimes`);\n\n// Booking APIs\nexport const createBooking = async (bookingData) => {\n  try {\n    // Endpoint: POST /bookings\n    // Request body: \n    // {\n    //   \"customer_id\": \"string\",\n    //   \"movie_id\": \"string\",\n    //   \"showtime_id\": \"string\",\n    //   \"seats\": [\"string\"],\n    //   \"total_amount\": 0,\n    //   \"status\": \"pending\"\n    // }\n    const response = await api.post('/bookings', bookingData);\n    return response;\n  } catch (error) {\n    console.error('Error creating booking:', error);\n    throw error;\n  }\n};\n\nexport const getBookings = () => api.get('/bookings');\nexport const getBookingById = (id) => api.get(`/bookings/${id}`);\n\n// Payment APIs\nexport const createPayment = (paymentData) => api.post('/payments', paymentData);\nexport const getPayments = () => api.get('/payments');\nexport const getPaymentById = (id) => api.get(`/payments/${id}`);\n\n// Seat APIs\nexport const getSeats = (showtimeId) => api.get(`/seats/showtime/${showtimeId}`);\nexport const bookSeats = (showtimeId, seats) => api.post('/book', { showtime_id: showtimeId, seats });\n\n// Customer APIs\nexport const getProfile = () => {\n  const customerId = localStorage.getItem('customer_id');\n  if (!customerId) {\n    throw new Error('Customer ID not found');\n  }\n  return api.get(`/customers/${customerId}`);\n};\n\nexport const updateProfile = (data) => {\n  const customerId = localStorage.getItem('customer_id');\n  if (!customerId) {\n    throw new Error('Customer ID not found');\n  }\n  return api.put(`/customers/${customerId}`, data);\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
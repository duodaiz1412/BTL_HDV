{"ast":null,"code":"var _jsxFileName = \"D:\\\\BTL_HDV\\\\mid-project-379283427\\\\frontend\\\\src\\\\components\\\\NotificationLogger.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNotifications } from './NotificationProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationLogger = () => {\n  _s();\n  const {\n    socket,\n    socketStatus\n  } = useNotifications();\n  const [logs, setLogs] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  const logContainerRef = useRef(null);\n\n  // Hàm thêm log mới\n  const addLog = (type, message, data = null) => {\n    const timestamp = new Date().toISOString();\n    const newLog = {\n      id: Date.now(),\n      timestamp,\n      type,\n      message,\n      data\n    };\n    setLogs(prevLogs => [newLog, ...prevLogs].slice(0, 100)); // Giới hạn số lượng log lưu trữ\n  };\n\n  // Xóa tất cả log\n  const clearLogs = () => {\n    setLogs([]);\n  };\n\n  // Định nghĩa các lắng nghe sự kiện Socket.IO\n  useEffect(() => {\n    if (socket) {\n      // Thiết lập interceptor cho tất cả các sự kiện\n      const originalOnPacket = socket.onpacket;\n      socket.onpacket = function (packet) {\n        if (packet.type === 2) {\n          // type 2 là event\n          const eventName = packet.data[0];\n          const eventData = packet.data[1];\n          addLog('receive', `Nhận sự kiện: ${eventName}`, eventData);\n        }\n        originalOnPacket.call(socket, packet);\n      };\n\n      // Lưu lại emit gốc\n      const originalEmit = socket.emit;\n      socket.emit = function (event, ...args) {\n        addLog('send', `Gửi sự kiện: ${event}`, args[0] || null);\n        return originalEmit.apply(socket, [event, ...args]);\n      };\n\n      // Thêm log khi kết nối thay đổi\n      const handleConnect = () => {\n        addLog('connection', 'Kết nối thành công đến API Gateway', {\n          socketId: socket.id\n        });\n      };\n      const handleDisconnect = reason => {\n        addLog('connection', 'Ngắt kết nối từ API Gateway', {\n          reason\n        });\n      };\n      const handleError = error => {\n        addLog('error', 'Lỗi kết nối Socket.IO', error);\n      };\n      socket.on('connect', handleConnect);\n      socket.on('disconnect', handleDisconnect);\n      socket.on('connect_error', handleError);\n\n      // Cleanup\n      return () => {\n        socket.onpacket = originalOnPacket;\n        socket.emit = originalEmit;\n        socket.off('connect', handleConnect);\n        socket.off('disconnect', handleDisconnect);\n        socket.off('connect_error', handleError);\n      };\n    }\n  }, [socket]);\n\n  // Hiển thị thông tin về trạng thái socket khi thay đổi\n  useEffect(() => {\n    addLog('status', `Trạng thái Socket.IO thay đổi: ${socketStatus}`);\n  }, [socketStatus]);\n\n  // Tự động cuộn đến log mới nhất\n  useEffect(() => {\n    if (logContainerRef.current && isVisible) {\n      logContainerRef.current.scrollTop = 0;\n    }\n  }, [logs, isVisible]);\n\n  // Format dữ liệu JSON để hiển thị\n  const formatData = data => {\n    if (!data) return null;\n    try {\n      return JSON.stringify(data, null, 2);\n    } catch (e) {\n      return String(data);\n    }\n  };\n\n  // Lấy màu dựa trên loại log\n  const getLogTypeColor = type => {\n    switch (type) {\n      case 'receive':\n        return 'bg-blue-100 text-blue-800';\n      case 'send':\n        return 'bg-purple-100 text-purple-800';\n      case 'error':\n        return 'bg-red-100 text-red-800';\n      case 'connection':\n        return 'bg-green-100 text-green-800';\n      case 'status':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Format thời gian hiển thị\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString() + '.' + date.getMilliseconds().toString().padStart(3, '0');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-0 right-0 z-50\",\n    children: isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-lg border border-gray-200 rounded-t-lg w-full md:w-[600px] max-h-[400px] flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-2 border-b border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-semibold\",\n            children: \"Socket.IO Log Monitor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ml-2 w-2 h-2 rounded-full ${socketStatus === 'connected' ? 'bg-green-500' : 'bg-red-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearLogs,\n            className: \"px-2 py-1 text-xs bg-gray-200 hover:bg-gray-300 rounded\",\n            children: \"X\\xF3a log\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsVisible(false),\n            className: \"px-2 py-1 text-xs bg-red-100 hover:bg-red-200 rounded\",\n            children: \"\\u0110\\xF3ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: logContainerRef,\n        className: \"overflow-y-auto flex-1 p-2 space-y-2 flex flex-col-reverse\",\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 rounded text-xs ${getLogTypeColor(log.type)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-mono\",\n              children: formatTime(log.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold uppercase text-[10px]\",\n              children: log.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: log.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), log.data && /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"mt-1 whitespace-pre-wrap bg-white bg-opacity-50 rounded p-1 text-[10px] overflow-x-auto\",\n            children: formatData(log.data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsVisible(true),\n      className: \"bg-gray-800 text-white p-2 rounded-tl-lg shadow-lg hover:bg-gray-700 transition-colors\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"h-5 w-5\",\n        viewBox: \"0 0 20 20\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zm7-10a1 1 0 01.707.293l.707.707L15.414 4a1 1 0 111.414 1.414l-1.414 1.414-.707.707a1 1 0 01-1.414-1.414l.707-.707L13.414 4a1 1 0 01.293-.707z\",\n          clipRule: \"evenodd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationLogger, \"BQqyADGNa1/vFRY3kPWdZXfNBmM=\", false, function () {\n  return [useNotifications];\n});\n_c = NotificationLogger;\nexport default NotificationLogger;\nvar _c;\n$RefreshReg$(_c, \"NotificationLogger\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNotifications","jsxDEV","_jsxDEV","NotificationLogger","_s","socket","socketStatus","logs","setLogs","isVisible","setIsVisible","logContainerRef","addLog","type","message","data","timestamp","Date","toISOString","newLog","id","now","prevLogs","slice","clearLogs","originalOnPacket","onpacket","packet","eventName","eventData","call","originalEmit","emit","event","args","apply","handleConnect","socketId","handleDisconnect","reason","handleError","error","on","off","current","scrollTop","formatData","JSON","stringify","e","String","getLogTypeColor","formatTime","date","toLocaleTimeString","getMilliseconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","log","xmlns","viewBox","fill","fillRule","d","clipRule","_c","$RefreshReg$"],"sources":["D:/BTL_HDV/mid-project-379283427/frontend/src/components/NotificationLogger.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNotifications } from './NotificationProvider';\r\n\r\nconst NotificationLogger = () => {\r\n  const { socket, socketStatus } = useNotifications();\r\n  const [logs, setLogs] = useState([]);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const logContainerRef = useRef(null);\r\n\r\n  // Hàm thêm log mới\r\n  const addLog = (type, message, data = null) => {\r\n    const timestamp = new Date().toISOString();\r\n    const newLog = {\r\n      id: Date.now(),\r\n      timestamp,\r\n      type,\r\n      message,\r\n      data\r\n    };\r\n    setLogs(prevLogs => [newLog, ...prevLogs].slice(0, 100)); // Giới hạn số lượng log lưu trữ\r\n  };\r\n\r\n  // Xóa tất cả log\r\n  const clearLogs = () => {\r\n    setLogs([]);\r\n  };\r\n\r\n  // Định nghĩa các lắng nghe sự kiện Socket.IO\r\n  useEffect(() => {\r\n    if (socket) {\r\n      // Thiết lập interceptor cho tất cả các sự kiện\r\n      const originalOnPacket = socket.onpacket;\r\n      socket.onpacket = function(packet) {\r\n        if (packet.type === 2) { // type 2 là event\r\n          const eventName = packet.data[0];\r\n          const eventData = packet.data[1];\r\n          addLog('receive', `Nhận sự kiện: ${eventName}`, eventData);\r\n        }\r\n        originalOnPacket.call(socket, packet);\r\n      };\r\n\r\n      // Lưu lại emit gốc\r\n      const originalEmit = socket.emit;\r\n      socket.emit = function(event, ...args) {\r\n        addLog('send', `Gửi sự kiện: ${event}`, args[0] || null);\r\n        return originalEmit.apply(socket, [event, ...args]);\r\n      };\r\n\r\n      // Thêm log khi kết nối thay đổi\r\n      const handleConnect = () => {\r\n        addLog('connection', 'Kết nối thành công đến API Gateway', { socketId: socket.id });\r\n      };\r\n\r\n      const handleDisconnect = (reason) => {\r\n        addLog('connection', 'Ngắt kết nối từ API Gateway', { reason });\r\n      };\r\n\r\n      const handleError = (error) => {\r\n        addLog('error', 'Lỗi kết nối Socket.IO', error);\r\n      };\r\n\r\n      socket.on('connect', handleConnect);\r\n      socket.on('disconnect', handleDisconnect);\r\n      socket.on('connect_error', handleError);\r\n\r\n      // Cleanup\r\n      return () => {\r\n        socket.onpacket = originalOnPacket;\r\n        socket.emit = originalEmit;\r\n        socket.off('connect', handleConnect);\r\n        socket.off('disconnect', handleDisconnect);\r\n        socket.off('connect_error', handleError);\r\n      };\r\n    }\r\n  }, [socket]);\r\n\r\n  // Hiển thị thông tin về trạng thái socket khi thay đổi\r\n  useEffect(() => {\r\n    addLog('status', `Trạng thái Socket.IO thay đổi: ${socketStatus}`);\r\n  }, [socketStatus]);\r\n\r\n  // Tự động cuộn đến log mới nhất\r\n  useEffect(() => {\r\n    if (logContainerRef.current && isVisible) {\r\n      logContainerRef.current.scrollTop = 0;\r\n    }\r\n  }, [logs, isVisible]);\r\n\r\n  // Format dữ liệu JSON để hiển thị\r\n  const formatData = (data) => {\r\n    if (!data) return null;\r\n    try {\r\n      return JSON.stringify(data, null, 2);\r\n    } catch (e) {\r\n      return String(data);\r\n    }\r\n  };\r\n\r\n  // Lấy màu dựa trên loại log\r\n  const getLogTypeColor = (type) => {\r\n    switch (type) {\r\n      case 'receive': return 'bg-blue-100 text-blue-800';\r\n      case 'send': return 'bg-purple-100 text-purple-800';\r\n      case 'error': return 'bg-red-100 text-red-800';\r\n      case 'connection': return 'bg-green-100 text-green-800';\r\n      case 'status': return 'bg-yellow-100 text-yellow-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  // Format thời gian hiển thị\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString() + '.' + date.getMilliseconds().toString().padStart(3, '0');\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed bottom-0 right-0 z-50\">\r\n      {isVisible ? (\r\n        <div className=\"bg-white shadow-lg border border-gray-200 rounded-t-lg w-full md:w-[600px] max-h-[400px] flex flex-col\">\r\n          <div className=\"flex justify-between items-center p-2 border-b border-gray-200 bg-gray-50\">\r\n            <div className=\"flex items-center\">\r\n              <h3 className=\"text-sm font-semibold\">Socket.IO Log Monitor</h3>\r\n              <span className={`ml-2 w-2 h-2 rounded-full ${socketStatus === 'connected' ? 'bg-green-500' : 'bg-red-500'}`}></span>\r\n            </div>\r\n            <div className=\"flex space-x-2\">\r\n              <button \r\n                onClick={clearLogs}\r\n                className=\"px-2 py-1 text-xs bg-gray-200 hover:bg-gray-300 rounded\"\r\n              >\r\n                Xóa log\r\n              </button>\r\n              <button \r\n                onClick={() => setIsVisible(false)}\r\n                className=\"px-2 py-1 text-xs bg-red-100 hover:bg-red-200 rounded\"\r\n              >\r\n                Đóng\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            ref={logContainerRef}\r\n            className=\"overflow-y-auto flex-1 p-2 space-y-2 flex flex-col-reverse\"\r\n          >\r\n            {logs.map(log => (\r\n              <div key={log.id} className={`p-2 rounded text-xs ${getLogTypeColor(log.type)}`}>\r\n                <div className=\"flex justify-between mb-1\">\r\n                  <span className=\"font-mono\">{formatTime(log.timestamp)}</span>\r\n                  <span className=\"font-semibold uppercase text-[10px]\">{log.type}</span>\r\n                </div>\r\n                <div>{log.message}</div>\r\n                {log.data && (\r\n                  <pre className=\"mt-1 whitespace-pre-wrap bg-white bg-opacity-50 rounded p-1 text-[10px] overflow-x-auto\">\r\n                    {formatData(log.data)}\r\n                  </pre>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <button \r\n          onClick={() => setIsVisible(true)}\r\n          className=\"bg-gray-800 text-white p-2 rounded-tl-lg shadow-lg hover:bg-gray-700 transition-colors\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zm7-10a1 1 0 01.707.293l.707.707L15.414 4a1 1 0 111.414 1.414l-1.414 1.414-.707.707a1 1 0 01-1.414-1.414l.707-.707L13.414 4a1 1 0 01.293-.707z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationLogger; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\BTL_HDV\\\\mid-project-379283427\\\\frontend\\\\src\\\\components\\\\NotificationList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getNotifications, markNotificationAsRead } from '../services/api';\nimport socketService from '../services/socket';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const customerId = localStorage.getItem('customer_id');\n    if (!customerId) return;\n\n    // Kết nối socket khi component mount\n    socketService.connect(customerId);\n\n    // Đăng ký callback cho sự kiện new_notification\n    const handleNewNotification = notification => {\n      setNotifications(prev => [notification, ...prev]);\n      // Hiển thị toast thông báo\n      toast.info(notification.content);\n    };\n    socketService.onNewNotification(handleNewNotification);\n\n    // Lấy danh sách thông báo ban đầu\n    const fetchNotifications = async () => {\n      try {\n        const response = await getNotifications();\n        setNotifications(response.data);\n      } catch (error) {\n        console.error('Error fetching notifications:', error);\n        toast.error('Không thể tải thông báo');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n\n    // Cleanup khi component unmount\n    return () => {\n      socketService.offNewNotification(handleNewNotification);\n      socketService.disconnect();\n    };\n  }, []);\n  const handleMarkAsRead = async notificationId => {\n    try {\n      await markNotificationAsRead(notificationId);\n      setNotifications(notifications.map(notification => notification._id === notificationId ? {\n        ...notification,\n        status: 'read'\n      } : notification));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n      toast.error('Không thể đánh dấu đã đọc');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-4\",\n      children: \"\\u0110ang t\\u1EA3i th\\xF4ng b\\xE1o...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-lg mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Th\\xF4ng b\\xE1o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-center\",\n      children: \"Kh\\xF4ng c\\xF3 th\\xF4ng b\\xE1o n\\xE0o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg shadow ${notification.status === 'unread' ? 'bg-blue-50 border-l-4 border-blue-500' : 'bg-white'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800\",\n              children: notification.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: new Date(notification.created_at).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), notification.status === 'unread' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMarkAsRead(notification._id),\n            className: \"ml-4 text-sm text-blue-600 hover:text-blue-800\",\n            children: \"\\u0110\\xE1nh d\\u1EA5u \\u0111\\xE3 \\u0111\\u1ECDc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, notification._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"b5Z8U3/R7VRYC3BVdCsp3rDTxkc=\");\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["React","useEffect","useState","getNotifications","markNotificationAsRead","socketService","toast","jsxDEV","_jsxDEV","NotificationList","_s","notifications","setNotifications","loading","setLoading","customerId","localStorage","getItem","connect","handleNewNotification","notification","prev","info","content","onNewNotification","fetchNotifications","response","data","error","console","offNewNotification","disconnect","handleMarkAsRead","notificationId","map","_id","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Date","created_at","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["D:/BTL_HDV/mid-project-379283427/frontend/src/components/NotificationList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getNotifications, markNotificationAsRead } from '../services/api';\r\nimport socketService from '../services/socket';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst NotificationList = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const customerId = localStorage.getItem('customer_id');\r\n    if (!customerId) return;\r\n\r\n    // Kết nối socket khi component mount\r\n    socketService.connect(customerId);\r\n\r\n    // Đăng ký callback cho sự kiện new_notification\r\n    const handleNewNotification = (notification) => {\r\n      setNotifications(prev => [notification, ...prev]);\r\n      // Hiển thị toast thông báo\r\n      toast.info(notification.content);\r\n    };\r\n\r\n    socketService.onNewNotification(handleNewNotification);\r\n\r\n    // Lấy danh sách thông báo ban đầu\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const response = await getNotifications();\r\n        setNotifications(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n        toast.error('Không thể tải thông báo');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n\r\n    // Cleanup khi component unmount\r\n    return () => {\r\n      socketService.offNewNotification(handleNewNotification);\r\n      socketService.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleMarkAsRead = async (notificationId) => {\r\n    try {\r\n      await markNotificationAsRead(notificationId);\r\n      setNotifications(notifications.map(notification => \r\n        notification._id === notificationId \r\n          ? { ...notification, status: 'read' }\r\n          : notification\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n      toast.error('Không thể đánh dấu đã đọc');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center py-4\">Đang tải thông báo...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-lg mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Thông báo</h2>\r\n      {notifications.length === 0 ? (\r\n        <p className=\"text-gray-500 text-center\">Không có thông báo nào</p>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          {notifications.map((notification) => (\r\n            <div\r\n              key={notification._id}\r\n              className={`p-4 rounded-lg shadow ${\r\n                notification.status === 'unread'\r\n                  ? 'bg-blue-50 border-l-4 border-blue-500'\r\n                  : 'bg-white'\r\n              }`}\r\n            >\r\n              <div className=\"flex justify-between items-start\">\r\n                <div className=\"flex-1\">\r\n                  <p className=\"text-gray-800\">{notification.content}</p>\r\n                  <p className=\"text-sm text-gray-500 mt-1\">\r\n                    {new Date(notification.created_at).toLocaleString()}\r\n                  </p>\r\n                </div>\r\n                {notification.status === 'unread' && (\r\n                  <button\r\n                    onClick={() => handleMarkAsRead(notification._id)}\r\n                    className=\"ml-4 text-sm text-blue-600 hover:text-blue-800\"\r\n                  >\r\n                    Đánh dấu đã đọc\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n// const NOTIFICATION_SOCKET_URL = 'http://localhost:8000'; // Dòng này không còn cần thiết\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Auth APIs\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = async () => {\n  try {\n    const response = await api.post('/auth/logout');\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const refreshToken = async refreshToken => {\n  try {\n    const response = await api.post('/auth/refresh-token', {\n      refreshToken\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Movie APIs\nexport const getMovies = () => api.get('/movies');\nexport const getMovieById = id => api.get(`/movies/${id}`);\nexport const getShowtimes = movieId => api.get(`/movies/${movieId}/showtimes`);\nexport const getSeats = showtimeId => api.get(`/showtimes/${showtimeId}/seats`);\n\n// Booking APIs\nexport const createBooking = bookingData => api.post('/bookings', bookingData);\nexport const getBookingsByCustomer = customerId => api.get(`/bookings/customer/${customerId}`);\nexport const getBookingById = bookingId => api.get(`/bookings/${bookingId}`);\nexport const cancelBooking = bookingId => api.put(`/bookings/${bookingId}/cancel`);\n\n// Payment APIs\nexport const createPaymentIntent = bookingId => api.post(`/payments/create-intent/${bookingId}`);\nexport const confirmPayment = (paymentIntentId, paymentMethodId) => api.post('/payments/confirm', {\n  paymentIntentId,\n  paymentMethodId\n});\n\n// User APIs\nexport const getUserProfile = () => api.get('/users/profile');\nexport const updateUserProfile = profileData => api.put('/users/profile', profileData);\n\n// Admin APIs (ví dụ)\nexport const getAllBookings = () => api.get('/admin/bookings');\nexport const updateBookingStatus = (bookingId, status) => api.put(`/admin/bookings/${bookingId}/status`, {\n  status\n});\n\n// Search APIs\nexport const searchMovies = query => api.get(`/search/movies?q=${query}`);\n\n// Review APIs\nexport const addReview = reviewData => api.post('/reviews', reviewData);\nexport const getReviewsByMovie = movieId => api.get(`/reviews/movie/${movieId}`);\n\n// Utility APIs\nexport const uploadFile = file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return api.post('/utils/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// Các hàm liên quan đến notification đã bị xoá\n// export const getNotifications = () => { ... };\n// export const markNotificationAsRead = (notificationId) => { ... };\n\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","login","credentials","response","post","error","register","userData","logout","refreshToken","getMovies","get","getMovieById","id","getShowtimes","movieId","getSeats","showtimeId","createBooking","bookingData","getBookingsByCustomer","customerId","getBookingById","bookingId","cancelBooking","put","createPaymentIntent","confirmPayment","paymentIntentId","paymentMethodId","getUserProfile","updateUserProfile","profileData","getAllBookings","updateBookingStatus","status","searchMovies","query","addReview","reviewData","getReviewsByMovie","uploadFile","file","formData","FormData","append"],"sources":["D:/BTL_HDV/mid-project-379283427/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n// const NOTIFICATION_SOCKET_URL = 'http://localhost:8000'; // Dòng này không còn cần thiết\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Auth APIs\nexport const login = async (credentials) => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const register = async (userData) => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const response = await api.post('/auth/logout');\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const refreshToken = async (refreshToken) => {\n  try {\n    const response = await api.post('/auth/refresh-token', { refreshToken });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Movie APIs\nexport const getMovies = () => api.get('/movies');\nexport const getMovieById = (id) => api.get(`/movies/${id}`);\nexport const getShowtimes = (movieId) => api.get(`/movies/${movieId}/showtimes`);\nexport const getSeats = (showtimeId) => api.get(`/showtimes/${showtimeId}/seats`);\n\n// Booking APIs\nexport const createBooking = (bookingData) => api.post('/bookings', bookingData);\nexport const getBookingsByCustomer = (customerId) => api.get(`/bookings/customer/${customerId}`);\nexport const getBookingById = (bookingId) => api.get(`/bookings/${bookingId}`);\nexport const cancelBooking = (bookingId) => api.put(`/bookings/${bookingId}/cancel`);\n\n// Payment APIs\nexport const createPaymentIntent = (bookingId) => api.post(`/payments/create-intent/${bookingId}`);\nexport const confirmPayment = (paymentIntentId, paymentMethodId) => api.post('/payments/confirm', { paymentIntentId, paymentMethodId });\n\n// User APIs\nexport const getUserProfile = () => api.get('/users/profile');\nexport const updateUserProfile = (profileData) => api.put('/users/profile', profileData);\n\n// Admin APIs (ví dụ)\nexport const getAllBookings = () => api.get('/admin/bookings');\nexport const updateBookingStatus = (bookingId, status) => api.put(`/admin/bookings/${bookingId}/status`, { status });\n\n// Search APIs\nexport const searchMovies = (query) => api.get(`/search/movies?q=${query}`);\n\n// Review APIs\nexport const addReview = (reviewData) => api.post('/reviews', reviewData);\nexport const getReviewsByMovie = (movieId) => api.get(`/reviews/movie/${movieId}`);\n\n// Utility APIs\nexport const uploadFile = (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return api.post('/utils/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n};\n\n// Các hàm liên quan đến notification đã bị xoá\n// export const getNotifications = () => { ... };\n// export const markNotificationAsRead = (notificationId) => { ... };\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
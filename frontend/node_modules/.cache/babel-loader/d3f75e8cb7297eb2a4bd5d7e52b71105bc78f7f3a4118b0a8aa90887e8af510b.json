{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Auth APIs\nexport const login = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/customers/login`, null, {\n      params: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/customers`, userData);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Movie APIs\nexport const getMovies = () => api.get('/movies');\nexport const getMovieById = id => api.get(`/movies/${id}`);\nexport const getShowtimes = movieId => api.get(`/movies/${movieId}/showtimes`);\n\n// Booking APIs\nexport const createBooking = bookingData => api.post('/bookings', bookingData);\nexport const getBookings = () => api.get('/bookings');\nexport const getBookingById = id => api.get(`/bookings/${id}`);\n\n// Payment APIs\nexport const createPayment = paymentData => api.post('/payments', paymentData);\nexport const getPayments = () => api.get('/payments');\nexport const getPaymentById = id => api.get(`/payments/${id}`);\n\n// Seat APIs\nexport const getSeats = showtimeId => api.get(`/seats/showtime/${showtimeId}`);\nexport const bookSeats = (showtimeId, seats) => api.post('/seats/book', {\n  showtime_id: showtimeId,\n  seats\n});\n\n// Customer APIs\nexport const getProfile = () => api.get('/customers/profile');\nexport const updateProfile = data => api.put('/customers/profile', data);\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","login","credentials","response","post","params","email","password","error","register","userData","getMovies","get","getMovieById","id","getShowtimes","movieId","createBooking","bookingData","getBookings","getBookingById","createPayment","paymentData","getPayments","getPaymentById","getSeats","showtimeId","bookSeats","seats","showtime_id","getProfile","updateProfile","data","put"],"sources":["D:/BTL_HDV/mid-project-379283427/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Auth APIs\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/customers/login`, null, {\r\n      params: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/customers`, userData);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Movie APIs\r\nexport const getMovies = () => api.get('/movies');\r\nexport const getMovieById = (id) => api.get(`/movies/${id}`);\r\nexport const getShowtimes = (movieId) => api.get(`/movies/${movieId}/showtimes`);\r\n\r\n// Booking APIs\r\nexport const createBooking = (bookingData) => api.post('/bookings', bookingData);\r\nexport const getBookings = () => api.get('/bookings');\r\nexport const getBookingById = (id) => api.get(`/bookings/${id}`);\r\n\r\n// Payment APIs\r\nexport const createPayment = (paymentData) => api.post('/payments', paymentData);\r\nexport const getPayments = () => api.get('/payments');\r\nexport const getPaymentById = (id) => api.get(`/payments/${id}`);\r\n\r\n// Seat APIs\r\nexport const getSeats = (showtimeId) => api.get(`/seats/showtime/${showtimeId}`);\r\nexport const bookSeats = (showtimeId, seats) => api.post('/seats/book', { showtime_id: showtimeId, seats });\r\n\r\n// Customer APIs\r\nexport const getProfile = () => api.get('/customers/profile');\r\nexport const updateProfile = (data) => api.put('/customers/profile', data);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,kBAAkB,EAAE,IAAI,EAAE;MACpES,MAAM,EAAE;QACNC,KAAK,EAAEJ,WAAW,CAACI,KAAK;QACxBC,QAAQ,EAAEL,WAAW,CAACK;MACxB;IACF,CAAC,CAAC;IACF,OAAOJ,QAAQ;EACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,YAAY,EAAEc,QAAQ,CAAC;IACnE,OAAOP,QAAQ;EACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAGA,CAAA,KAAMd,GAAG,CAACe,GAAG,CAAC,SAAS,CAAC;AACjD,OAAO,MAAMC,YAAY,GAAIC,EAAE,IAAKjB,GAAG,CAACe,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;AAC5D,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAKnB,GAAG,CAACe,GAAG,CAAC,WAAWI,OAAO,YAAY,CAAC;;AAEhF;AACA,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAKrB,GAAG,CAACO,IAAI,CAAC,WAAW,EAAEc,WAAW,CAAC;AAChF,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMtB,GAAG,CAACe,GAAG,CAAC,WAAW,CAAC;AACrD,OAAO,MAAMQ,cAAc,GAAIN,EAAE,IAAKjB,GAAG,CAACe,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;;AAEhE;AACA,OAAO,MAAMO,aAAa,GAAIC,WAAW,IAAKzB,GAAG,CAACO,IAAI,CAAC,WAAW,EAAEkB,WAAW,CAAC;AAChF,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM1B,GAAG,CAACe,GAAG,CAAC,WAAW,CAAC;AACrD,OAAO,MAAMY,cAAc,GAAIV,EAAE,IAAKjB,GAAG,CAACe,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;;AAEhE;AACA,OAAO,MAAMW,QAAQ,GAAIC,UAAU,IAAK7B,GAAG,CAACe,GAAG,CAAC,mBAAmBc,UAAU,EAAE,CAAC;AAChF,OAAO,MAAMC,SAAS,GAAGA,CAACD,UAAU,EAAEE,KAAK,KAAK/B,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;EAAEyB,WAAW,EAAEH,UAAU;EAAEE;AAAM,CAAC,CAAC;;AAE3G;AACA,OAAO,MAAME,UAAU,GAAGA,CAAA,KAAMjC,GAAG,CAACe,GAAG,CAAC,oBAAoB,CAAC;AAC7D,OAAO,MAAMmB,aAAa,GAAIC,IAAI,IAAKnC,GAAG,CAACoC,GAAG,CAAC,oBAAoB,EAAED,IAAI,CAAC;AAE1E,eAAenC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}